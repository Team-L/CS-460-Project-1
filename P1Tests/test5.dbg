Input file: test5.ss
   1: (car '(abc def ghi))
	LPAREN_T        (
	CAR_T           car
	QUOTE_T         '
	LPAREN_T        (
	SYMBOL_T        abc
	SYMBOL_T        def
	SYMBOL_T        ghi
	RPAREN_T        )
	RPAREN_T        )
   2: (cons 'abd '(1 2 3))
	LPAREN_T        (
	CONS_T          cons
	QUOTE_T         '
	SYMBOL_T        abd
	QUOTE_T         '
	LPAREN_T        (
	NUMLIT_T        1
	NUMLIT_T        2
	NUMLIT_T        3
	RPAREN_T        )
	RPAREN_T        )
   3: (cons 'a 'b)
	LPAREN_T        (
	CONS_T          cons
	QUOTE_T         '
	SYMBOL_T        a
	QUOTE_T         '
	SYMBOL_T        b
	RPAREN_T        )
   4: (cons (car '(a b c d)) (cddr '(a b c d)))
	LPAREN_T        (
	CONS_T          cons
	LPAREN_T        (
	CAR_T           car
	QUOTE_T         '
	LPAREN_T        (
	SYMBOL_T        a
	SYMBOL_T        b
	SYMBOL_T        c
	SYMBOL_T        d
	RPAREN_T        )
	RPAREN_T        )
	LPAREN_T        (
	LISTOP_T        cddr
	QUOTE_T         '
	LPAREN_T        (
	SYMBOL_T        a
	SYMBOL_T        b
	SYMBOL_T        c
	SYMBOL_T        d
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
   5: (cons (cadr '(a b c d)) (caddr '(a b c d)))
	LPAREN_T        (
	CONS_T          cons
	LPAREN_T        (
	LISTOP_T        cadr
	QUOTE_T         '
	LPAREN_T        (
	SYMBOL_T        a
	SYMBOL_T        b
	SYMBOL_T        c
	SYMBOL_T        d
	RPAREN_T        )
	RPAREN_T        )
	LPAREN_T        (
	LISTOP_T        caddr
	QUOTE_T         '
	LPAREN_T        (
	SYMBOL_T        a
	SYMBOL_T        b
	SYMBOL_T        c
	SYMBOL_T        d
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
   6: 
   7: (define (two-thirds L)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	SYMBOL_T        two
	MINUS_T         -
	SYMBOL_T        thirds
	SYMBOL_T        L
	RPAREN_T        )
   8: 	(if (list? L)
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	LISTP_T         list?
	SYMBOL_T        L
	RPAREN_T        )
   9: 		(if (< (length L) 3)
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	LT_T            <
	LPAREN_T        (
	SYMBOL_T        length
	SYMBOL_T        L
	RPAREN_T        )
	NUMLIT_T        3
	RPAREN_T        )
  10: 			L
	SYMBOL_T        L
  11: 			(cons (car L) (cons (cadr L) (two-thirds (cdddr L))))
	LPAREN_T        (
	CONS_T          cons
	LPAREN_T        (
	CAR_T           car
	SYMBOL_T        L
	RPAREN_T        )
	LPAREN_T        (
	CONS_T          cons
	LPAREN_T        (
	LISTOP_T        cadr
	SYMBOL_T        L
	RPAREN_T        )
	LPAREN_T        (
	SYMBOL_T        two
	MINUS_T         -
	SYMBOL_T        thirds
	LPAREN_T        (
	LISTOP_T        cdddr
	SYMBOL_T        L
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
  12: 		)
	RPAREN_T        )
  13: 		'()
	QUOTE_T         '
	LPAREN_T        (
	RPAREN_T        )
  14: 	)
	RPAREN_T        )
  15: )
	RPAREN_T        )
  16: 
  17: (two-thirds '(a b c 1 2 3 x y z 7 8 9))
	LPAREN_T        (
	SYMBOL_T        two
	MINUS_T         -
	SYMBOL_T        thirds
	QUOTE_T         '
	LPAREN_T        (
	SYMBOL_T        a
	SYMBOL_T        b
	SYMBOL_T        c
	NUMLIT_T        1
	NUMLIT_T        2
	NUMLIT_T        3
	SYMBOL_T        x
	SYMBOL_T        y
	SYMBOL_T        z
	NUMLIT_T        7
	NUMLIT_T        8
	NUMLIT_T        9
	RPAREN_T        )
	RPAREN_T        )
0 errors found in input file
